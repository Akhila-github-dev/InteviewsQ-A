public class InterviewQuestions {

	public static void main(String[] args) {

//list of strings and returns a new list containing only the strings that contain the letter 'a' in them

		List<String> list= List.of("java","sql","as","spring","iq");
	
		list.stream().filter(f->f.contains("a")).forEach(System.out::println);
	//=========================================================================================================================
		// list of integers and returns the sum of the square of each number in the list. 
		List<Integer> li = List.of(1, 2, 3);
		
			Optional<Integer> reduce2 = li.stream().map(m->m*m).reduce((a,b)->a+b);
		System.out.println(reduce2.get());
		
		
		Optional<Integer> reduce3 = li.stream().map(m->m*m).reduce(Integer::sum);
		
		System.out.println(reduce3);
	//===============================================================================================================
// list of integers and returns a new list containing only the prime numbers
		List<Integer> collect = li.stream()
        .filter(number -> number > 1 && 
                IntStream.rangeClosed(2, (int) Math.sqrt(number))
                         .noneMatch(i -> number % i == 0))
           .collect(Collectors.toList());
		System.out.println(collect);

//============================================================================================================
// list of integers and returns the average of all the odd numbers in the list. 
		
			OptionalDouble average = li.stream().filter(f->f%2!=0).mapToInt(Integer::intValue).average();
			System.out.println(average.getAsDouble());

//=======================================================================================================
		//list of strings and returns a new list containing the strings that have the letter 'e' as the second letter.
		
		list.stream().filter(f-> f.charAt(1)=='e').collect(Collectors.toList());
//============================================================================================================



	}

}
