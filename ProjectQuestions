1.roles and responsibilities in project?
i am one of the developer in the project. I have worked on agile methodology. Based on the requirement from the 
story we use to do code configuration. we use to analyze the story, make necessary code changes. i use to do local
deployment, local testing and committing code changes and do deployment. if we got any issue we use to analyze
the issue , debugging the issue checking splunck logs and resloving it.
=======================================================================
what are the code changes you have done?
code changes i have done are i have written Junit test cases,
2. i have to populate one id in report. i have worked on report geneartion model there we need to populate one Id
in the report i have written logic for it.
3. we are getting one csv file( comma separated file). we have written logic to extract values from it and
store it in a list and save it db.
4. JWT filter(security)
5. we had a client requirement for particular method it is throwing exception. it should not throw the error. so 
we have removed it(better not to say)
6. zero should not be shown at frontend 
7. we need to unnecessary code which is take more deployment time. after doing it deployement speed is increased
8. oracle db migration from 12c to 19c. db testing i have done. checking 2 db has same data.
In tallyman Application 
weekly report account monitoring activity
change requests
incidents
batch processing
=======================================================================
Can you describe a challenging project you worked on?
the challenges i have faced in my project in security setup. like managing the user login token across the 
all the services. to reslove this we have jwt filter. 
============================================================================
What technologies did you use?
java, spring , spring jdbc, sql.
======================================================================
How did you optimize performance in your project?
we noticed that API response times were slow due to redundant database queries. Using a profiling tool, 
we identified excessive calls to the same table. To fix this, we introduced Redis caching to store
frequently accessed data, reducing database load. Additionally, we optimized SQL queries by adding indexes.
As a result, response times improved from 1.5s to 200ms, significantly enhancing system performance and user
experience.
===========================================================================
Did you use caching, multithreading, or database indexing?
In our banking project, we implemented multithreading for concurrent transaction processing. 
When multiple users initiate transactions, we use Javaâ€™s ExecutorService to ensure efficient parallel
execution while maintaining data integrity."
=================================================================================
How did you measure performance improvements?
In our banking project, we integrated Spring Boot Actuator to monitor API performance.
Using /actuator/metrics/http.server.requests, we tracked response times before and after caching 
implementation. This helped us validate the optimization, reducing latency from 1.8s to 300ms."
=================================================================================
Explain a scenario where you had to debug a complex issue in your project.
security issue we can say.
=================================================================================
What debugging tools or techniques did you use?
we used Splunk to analyze application logs and identify transaction failures. 
It helped us pinpoint errors quickly and reduce debugging time.

IDE Debuggers: Used Eclipse for setting breakpoints and stepping through code.
Logging & Monitoring: Used Log4j, SLF4J, and Spring Boot Actuator for application health tracking.
Profiling Tools: Utilized JProfiler, VisualVM, JConsole to analyze performance bottlenecks.
Load Testing: Used JMeter & Gatling for identifying scaling issues.


=================================================================================
How did you resolve the issue?
by using splunk only we have analyze the issue where it is causing and debugging it and tried to reslove it.
=================================================================================
How do you ensure code quality in your projects?
using junit test cases and checking the code coverage we can check the code quality.sonar qube for code quality.
=================================================================================
Do you follow design patterns, unit testing, or code reviews?
=================================================================================
How do you handle technical debt?
=================================================================================
Have you worked with microservices architecture?
=================================================================================
How did you design and implement microservices?
=================================================================================
What challenges did you face in inter-service communication?
=================================================================================
How do you handle database transactions in your project?
=================================================================================
Have you used Hibernate, JPA, or JDBC?
=================================================================================
How do you ensure data consistency?
=================================================================================
What security measures did you implement in your project?
=================================================================================
Did you use authentication, authorization, or encryption?
=================================================================================
How did you prevent SQL injection or XSS attacks?
=================================================================================
How do you manage dependencies in your Java projects?
=================================================================================
Have you used Maven or Gradle?
yes i have used maven build tool.
=================================================================================
How do you handle version conflicts?

Can you explain a scenario where you improved the scalability of your application?

Did you use load balancing, caching, or asynchronous processing?

How do you handle exceptions in your project?

Do you use custom exception handling?
yes we have used custom exception handling like usernotfound exception, reportgenerationexception.

How do you log and monitor errors?



